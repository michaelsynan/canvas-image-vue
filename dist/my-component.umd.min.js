(function(e,t){"object"===typeof exports&&"object"===typeof module?module.exports=t(require("vue")):"function"===typeof define&&define.amd?define([],t):"object"===typeof exports?exports["my-component"]=t(require("vue")):e["my-component"]=t(e["Vue"])})("undefined"!==typeof self?self:this,(e=>(()=>{"use strict";var t={744:(e,t)=>{t.Z=(e,t)=>{const o=e.__vccOpts||e;for(const[n,r]of t)o[n]=r;return o}},203:t=>{t.exports=e}},o={};function n(e){var r=o[e];if(void 0!==r)return r.exports;var i=o[e]={exports:{}};return t[e](i,i.exports,n),i.exports}(()=>{n.d=(e,t)=>{for(var o in t)n.o(t,o)&&!n.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})}})(),(()=>{n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)})(),(()=>{n.p=""})();var r={};return(()=>{if(n.d(r,{default:()=>m}),"undefined"!==typeof window){var e=window.document.currentScript,t=e&&e.src.match(/(.+\/)[^/]+\.js(\?.*)?$/);t&&(n.p=t[1])}var o=n(203);const i={class:"columns-container"},s=["id"],c=["width","height"];function a(e,t,n,r,a,l){return(0,o.openBlock)(),(0,o.createElementBlock)("div",null,[(0,o.createElementVNode)("div",i,[((0,o.openBlock)(!0),(0,o.createElementBlock)(o.Fragment,null,(0,o.renderList)(n.rows,((e,t)=>((0,o.openBlock)(),(0,o.createElementBlock)("div",{key:t,class:"row"},[((0,o.openBlock)(!0),(0,o.createElementBlock)(o.Fragment,null,(0,o.renderList)(n.columns,((e,n)=>((0,o.openBlock)(),(0,o.createElementBlock)("div",{key:n,id:"column-"+n+"-row-"+t,class:"column"},[(0,o.createElementVNode)("canvas",{ref_for:!0,ref:"canvas-"+n+"-row-"+t,width:a.columnWidth,height:a.rowHeight},null,8,c)],8,s)))),128))])))),128))])])}const l={name:"CanvasGrid",props:{columns:{type:Number,default:5},rows:{type:Number,default:3},image:{type:String,default:""}},data(){return{canvasWidth:0,canvasHeight:0,columnWidth:0,rowHeight:0}},mounted(){const e=new Image;e.src=this.image,e.addEventListener("load",(()=>{this.canvasWidth=e.width,this.canvasHeight=e.height;let t=Math.ceil(this.canvasWidth/this.columns);t+=(this.columns-t%this.columns)%this.columns,this.columnWidth=t,this.rowHeight=Math.ceil(this.canvasHeight/this.rows);const o=[];for(let e=0;e<this.columns;e++){o[e]=[];for(let t=0;t<this.rows;t++)o[e][t]=new Image,o[e][t].src=this.image,o[e][t].addEventListener("load",(()=>{const n=this.$refs["canvas-"+e+"-row-"+t][0],r=n.getContext("2d");r.drawImage(o[e][t],e*this.columnWidth,t*this.rowHeight,this.columnWidth,this.rowHeight,0,0,this.columnWidth,this.rowHeight)}))}}))}};var d=n(744);const h=(0,d.Z)(l,[["render",a],["__scopeId","data-v-6c547658"]]),u=h,m=u})(),r=r["default"],r})()));
//# sourceMappingURL=my-component.umd.min.js.map